services:
  postgres:
    build:
      context: ./docker/development/postgres
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=tcora_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d tcora_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: docker/development/Dockerfile
      args:
        SERVICE: api
    ports:
      - "3000:3000"
    env_file: 
      - ./services/api/.env.docker
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev:api 
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  websocket:
    build:
      context: .
      dockerfile: docker/development/Dockerfile
    command: npm run dev:websocket
    ports:
      - "3001:3001"
    env_file: 
      - ./services/api/.env.docker
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: