# Multi-Tenant Application Platform Project Plan

## System Overview

### Management Site (Platform Level)
- Purpose: Platform administration for app licensing and client management
- Users: Platform administrators (you) or resellers
- Key Functions:
  - Register and manage app clients
  - Manage license status and subscriptions
  - Monitor app usage and analytics
  - Access multi-tenant data for support
  - Configure white-label settings

### Admin Site (Client Level)
- Purpose: Individual application administration for end-users
- Users: Your clients' administrators
- Key Functions:
  - User management (CRUD operations)
  - Role management (Super Admin, Regular Admin)
  - Subscription plan management
  - Ticket system administration
  - Chat system moderation
  - User profile management
  - Email settings configuration

### Member Site/App
- Purpose: End-user application interface
- Platform: Web + Mobile (React Native Web)
- Key Functions:
  - User authentication
  - Profile management
  - Subscription management
  - Communication features
  - App-specific features

## Project Structure

├── .env
├── .eslintrc.js
├── .github
│   └── workflows
│       └── ci.yml
├── .gitignore
├── .prettierrc.js
├── .turbo
│   ├── cache
│   │   ├── 3925d23b75e0ff54-meta.json
│   │   ├── 3925d23b75e0ff54.tar.zst
│   │   ├── 504147e71030d0fa-meta.json
│   │   ├── 504147e71030d0fa.tar.zst
│   │   ├── 50af6138ccd02c33-meta.json
│   │   ├── 50af6138ccd02c33.tar.zst
│   │   ├── 78aaaecf440cfbcb-meta.json
│   │   ├── 78aaaecf440cfbcb.tar.zst
│   │   ├── 80518905d91786c3-meta.json
│   │   ├── 80518905d91786c3.tar.zst
│   │   ├── 96ed77019e57c2f0-meta.json
│   │   ├── 96ed77019e57c2f0.tar.zst
│   │   ├── ff2dcd1559f075aa-meta.json
│   │   └── ff2dcd1559f075aa.tar.zst
│   └── cookies
│       ├── 16.cookie
│       ├── 17.cookie
│       ├── 18.cookie
│       ├── 19.cookie
│       ├── 20.cookie
│       ├── 21.cookie
│       ├── 22.cookie
│       ├── 23.cookie
│       ├── 24.cookie
│       ├── 25.cookie
│       ├── 26.cookie
│       ├── 27.cookie
│       ├── 28.cookie
│       ├── 29.cookie
│       └── 30.cookie
├── apps
│   ├── tcora-admin
│   │   ├── .env.local
│   │   ├── .next
│   │   │   ├── BUILD_ID
│   │   │   ├── build-manifest.json
│   │   │   ├── cache
│   │   │   │   ├── .tsbuildinfo
│   │   │   │   ├── swc
│   │   │   │   │   └── plugins
│   │   │   │   │       └── v7_macos_x86_64_0.106.15
│   │   │   │   └── webpack
│   │   │   │       ├── client-production
│   │   │   │       │   ├── 0.pack
│   │   │   │       │   ├── 1.pack
│   │   │   │       │   ├── 2.pack
│   │   │   │       │   ├── index.pack
│   │   │   │       │   └── index.pack.old
│   │   │   │       ├── edge-server-production
│   │   │   │       │   ├── 0.pack
│   │   │   │       │   ├── index.pack
│   │   │   │       │   └── index.pack.old
│   │   │   │       └── server-production
│   │   │   │           ├── 0.pack
│   │   │   │           ├── index.pack
│   │   │   │           └── index.pack.old
│   │   │   ├── export-marker.json
│   │   │   ├── images-manifest.json
│   │   │   ├── next-minimal-server.js.nft.json
│   │   │   ├── next-server.js.nft.json
│   │   │   ├── package.json
│   │   │   ├── prerender-manifest.json
│   │   │   ├── react-loadable-manifest.json
│   │   │   ├── required-server-files.json
│   │   │   ├── routes-manifest.json
│   │   │   ├── server
│   │   │   │   ├── chunks
│   │   │   │   │   ├── 902.js
│   │   │   │   │   └── font-manifest.json
│   │   │   │   ├── font-manifest.json
│   │   │   │   ├── functions-config-manifest.json
│   │   │   │   ├── interception-route-rewrite-manifest.js
│   │   │   │   ├── middleware-build-manifest.js
│   │   │   │   ├── middleware-manifest.json
│   │   │   │   ├── middleware-react-loadable-manifest.js
│   │   │   │   ├── next-font-manifest.js
│   │   │   │   ├── next-font-manifest.json
│   │   │   │   ├── pages
│   │   │   │   │   ├── 404.html
│   │   │   │   │   ├── 500.html
│   │   │   │   │   ├── _app.js
│   │   │   │   │   ├── _app.js.nft.json
│   │   │   │   │   ├── _document.js
│   │   │   │   │   ├── _document.js.nft.json
│   │   │   │   │   ├── _error.js
│   │   │   │   │   └── _error.js.nft.json
│   │   │   │   ├── pages-manifest.json
│   │   │   │   └── webpack-runtime.js
│   │   │   ├── static
│   │   │   │   ├── IurnU98XYChJ8yRVd2Ef-
│   │   │   │   │   ├── _buildManifest.js
│   │   │   │   │   └── _ssgManifest.js
│   │   │   │   └── chunks
│   │   │   │       ├── framework-e82a91356956e6c8.js
│   │   │   │       ├── main-12537d5e42bc9c89.js
│   │   │   │       ├── pages
│   │   │   │       │   ├── _app-43f5eb2815643975.js
│   │   │   │       │   └── _error-305f8e082798b6b6.js
│   │   │   │       ├── polyfills-42372ed130431b0a.js
│   │   │   │       └── webpack-4e7214a60fad8e88.js
│   │   │   └── trace
│   │   ├── .turbo
│   │   │   └── turbo-build.log
│   │   ├── next-env.d.ts
│   │   ├── package.json
│   │   ├── src
│   │   │   ├── components
│   │   │   │   └── .gitkeep
│   │   │   ├── hooks
│   │   │   │   └── .gitkeep
│   │   │   ├── pages
│   │   │   │   └── .gitkeep
│   │   │   ├── styles
│   │   │   │   └── .gitkeep
│   │   │   └── utils
│   │   │       └── .gitkeep
│   │   └── tsconfig.json
│   ├── tcora-client
│   │   ├── .env.local
│   │   ├── .next
│   │   │   ├── BUILD_ID
│   │   │   ├── build-manifest.json
│   │   │   ├── cache
│   │   │   │   ├── .tsbuildinfo
│   │   │   │   ├── swc
│   │   │   │   │   └── plugins
│   │   │   │   │       └── v7_macos_x86_64_0.106.15
│   │   │   │   └── webpack
│   │   │   │       ├── client-production
│   │   │   │       │   ├── 0.pack
│   │   │   │       │   ├── 1.pack
│   │   │   │       │   ├── 2.pack
│   │   │   │       │   ├── index.pack
│   │   │   │       │   └── index.pack.old
│   │   │   │       ├── edge-server-production
│   │   │   │       │   ├── 0.pack
│   │   │   │       │   ├── index.pack
│   │   │   │       │   └── index.pack.old
│   │   │   │       └── server-production
│   │   │   │           ├── 0.pack
│   │   │   │           ├── index.pack
│   │   │   │           └── index.pack.old
│   │   │   ├── export-marker.json
│   │   │   ├── images-manifest.json
│   │   │   ├── next-minimal-server.js.nft.json
│   │   │   ├── next-server.js.nft.json
│   │   │   ├── package.json
│   │   │   ├── prerender-manifest.json
│   │   │   ├── react-loadable-manifest.json
│   │   │   ├── required-server-files.json
│   │   │   ├── routes-manifest.json
│   │   │   ├── server
│   │   │   │   ├── chunks
│   │   │   │   │   ├── 902.js
│   │   │   │   │   └── font-manifest.json
│   │   │   │   ├── font-manifest.json
│   │   │   │   ├── functions-config-manifest.json
│   │   │   │   ├── interception-route-rewrite-manifest.js
│   │   │   │   ├── middleware-build-manifest.js
│   │   │   │   ├── middleware-manifest.json
│   │   │   │   ├── middleware-react-loadable-manifest.js
│   │   │   │   ├── next-font-manifest.js
│   │   │   │   ├── next-font-manifest.json
│   │   │   │   ├── pages
│   │   │   │   │   ├── 404.html
│   │   │   │   │   ├── 500.html
│   │   │   │   │   ├── _app.js
│   │   │   │   │   ├── _app.js.nft.json
│   │   │   │   │   ├── _document.js
│   │   │   │   │   ├── _document.js.nft.json
│   │   │   │   │   ├── _error.js
│   │   │   │   │   └── _error.js.nft.json
│   │   │   │   ├── pages-manifest.json
│   │   │   │   └── webpack-runtime.js
│   │   │   ├── static
│   │   │   │   ├── VdtaLuewk-n9g0jx7mEEW
│   │   │   │   │   ├── _buildManifest.js
│   │   │   │   │   └── _ssgManifest.js
│   │   │   │   └── chunks
│   │   │   │       ├── framework-e82a91356956e6c8.js
│   │   │   │       ├── main-12537d5e42bc9c89.js
│   │   │   │       ├── pages
│   │   │   │       │   ├── _app-43f5eb2815643975.js
│   │   │   │       │   └── _error-305f8e082798b6b6.js
│   │   │   │       ├── polyfills-42372ed130431b0a.js
│   │   │   │       └── webpack-4e7214a60fad8e88.js
│   │   │   └── trace
│   │   ├── .turbo
│   │   │   └── turbo-build.log
│   │   ├── next-env.d.ts
│   │   ├── package.json
│   │   ├── src
│   │   │   ├── components
│   │   │   │   └── .gitkeep
│   │   │   ├── hooks
│   │   │   │   └── .gitkeep
│   │   │   ├── pages
│   │   │   ├── styles
│   │   │   │   └── .gitkeep
│   │   │   └── utils
│   │   │       └── .gitkeep
│   │   └── tsconfig.json
│   └── tcora-platform
│       ├── .env.local
│       ├── .next
│       │   ├── BUILD_ID
│       │   ├── build-manifest.json
│       │   ├── cache
│       │   │   ├── .tsbuildinfo
│       │   │   ├── swc
│       │   │   │   └── plugins
│       │   │   │       └── v7_macos_x86_64_0.106.15
│       │   │   └── webpack
│       │   │       ├── client-production
│       │   │       │   ├── 0.pack
│       │   │       │   ├── 1.pack
│       │   │       │   ├── 2.pack
│       │   │       │   ├── index.pack
│       │   │       │   └── index.pack.old
│       │   │       ├── edge-server-production
│       │   │       │   ├── 0.pack
│       │   │       │   ├── index.pack
│       │   │       │   └── index.pack.old
│       │   │       └── server-production
│       │   │           ├── 0.pack
│       │   │           ├── index.pack
│       │   │           └── index.pack.old
│       │   ├── export-marker.json
│       │   ├── images-manifest.json
│       │   ├── next-minimal-server.js.nft.json
│       │   ├── next-server.js.nft.json
│       │   ├── package.json
│       │   ├── prerender-manifest.json
│       │   ├── react-loadable-manifest.json
│       │   ├── required-server-files.json
│       │   ├── routes-manifest.json
│       │   ├── server
│       │   │   ├── chunks
│       │   │   │   ├── 902.js
│       │   │   │   └── font-manifest.json
│       │   │   ├── font-manifest.json
│       │   │   ├── functions-config-manifest.json
│       │   │   ├── interception-route-rewrite-manifest.js
│       │   │   ├── middleware-build-manifest.js
│       │   │   ├── middleware-manifest.json
│       │   │   ├── middleware-react-loadable-manifest.js
│       │   │   ├── next-font-manifest.js
│       │   │   ├── next-font-manifest.json
│       │   │   ├── pages
│       │   │   │   ├── 404.html
│       │   │   │   ├── 500.html
│       │   │   │   ├── _app.js
│       │   │   │   ├── _app.js.nft.json
│       │   │   │   ├── _document.js
│       │   │   │   ├── _document.js.nft.json
│       │   │   │   ├── _error.js
│       │   │   │   └── _error.js.nft.json
│       │   │   ├── pages-manifest.json
│       │   │   └── webpack-runtime.js
│       │   ├── static
│       │   │   ├── 23sRortt-QgmX9aBR-qWB
│       │   │   │   ├── _buildManifest.js
│       │   │   │   └── _ssgManifest.js
│       │   │   └── chunks
│       │   │       ├── framework-e82a91356956e6c8.js
│       │   │       ├── main-12537d5e42bc9c89.js
│       │   │       ├── pages
│       │   │       │   ├── _app-43f5eb2815643975.js
│       │   │       │   └── _error-305f8e082798b6b6.js
│       │   │       ├── polyfills-42372ed130431b0a.js
│       │   │       └── webpack-4e7214a60fad8e88.js
│       │   └── trace
│       ├── .turbo
│       │   └── turbo-build.log
│       ├── next-env.d.ts
│       ├── package.json
│       ├── src
│       │   ├── components
│       │   │   └── .gitkeep
│       │   ├── hooks
│       │   │   ├── .gitkeep
│       │   │   └── useAuth.ts
│       │   ├── pages
│       │   │   └── .gitkeep
│       │   ├── styles
│       │   │   └── .gitkeep
│       │   └── utils
│       │       └── .gitkeep
│       └── tsconfig.json
├── commands-guide.md
├── docker
│   ├── development
│   │   ├── Dockerfile
│   │   └── postgres
│   │       ├── Dockerfile
│   │       └── postgresql.conf
│   ├── init
│   │   └── 01-init.sql
│   └── production
│       └── Dockerfile
├── docker-compose.yml
├── docs
│   ├── api
│   │   └── README.md
│   ├── architecture
│   │   └── README.md
│   └── development
│       └── README.md
├── package-lock.json
├── package.json
├── packages
│   ├── config
│   │   ├── .turbo
│   │   │   └── turbo-build.log
│   │   ├── dist
│   │   │   ├── index.d.mts
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   └── index.mjs
│   │   ├── package.json
│   │   ├── src
│   │   │   ├── auth
│   │   │   │   ├── jwt.ts
│   │   │   │   └── types.ts
│   │   │   ├── constants.ts
│   │   │   ├── environment.ts
│   │   │   ├── index.ts
│   │   │   └── tsconfig.base.json
│   │   └── tsconfig.base.json
│   ├── core
│   │   ├── .turbo
│   │   │   └── turbo-build.log
│   │   ├── dist
│   │   │   ├── index.d.mts
│   │   │   ├── index.d.ts
│   │   │   ├── index.js
│   │   │   ├── index.js.map
│   │   │   ├── index.mjs
│   │   │   └── index.mjs.map
│   │   ├── package.json
│   │   ├── src
│   │   │   ├── auth
│   │   │   │   ├── auth.controller.ts
│   │   │   │   ├── guards.ts
│   │   │   │   ├── jwt.ts
│   │   │   │   └── types.ts
│   │   │   ├── database
│   │   │   │   ├── connection.ts
│   │   │   │   ├── schema.sql
│   │   │   │   ├── test-connection.ts
│   │   │   │   └── types.ts
│   │   │   ├── index.ts
│   │   │   └── utils
│   │   │       └── logger.ts
│   │   └── tsup.config.ts
│   └── ui
│       ├── package.json
│       └── src
├── services
│   ├── api
│   │   ├── .env
│   │   ├── .turbo
│   │   │   └── turbo-build.log
│   │   ├── db
│   │   │   └── packages
│   │   │       └── core
│   │   │           └── src
│   │   │               └── index.ts
│   │   ├── dist
│   │   │   ├── app.controller.d.ts
│   │   │   ├── app.controller.d.ts.map
│   │   │   ├── app.controller.js
│   │   │   ├── app.module.d.ts
│   │   │   ├── app.module.d.ts.map
│   │   │   ├── app.module.js
│   │   │   ├── main.d.ts
│   │   │   ├── main.d.ts.map
│   │   │   └── main.js
│   │   ├── package.json
│   │   ├── src
│   │   │   ├── app.controller.ts
│   │   │   ├── app.module.ts
│   │   │   └── main.ts
│   │   └── tsconfig.json
│   └── websocket
│       ├── .env
│       ├── .turbo
│       │   └── turbo-build.log
│       ├── dist
│       │   ├── main.d.ts
│       │   ├── main.d.ts.map
│       │   ├── main.js
│       │   ├── ws.controller.d.ts
│       │   ├── ws.controller.d.ts.map
│       │   ├── ws.controller.js
│       │   ├── ws.module.d.ts
│       │   ├── ws.module.d.ts.map
│       │   └── ws.module.js
│       ├── package.json
│       ├── src
│       │   ├── main.ts
│       │   ├── ws.controller.ts
│       │   └── ws.module.ts
│       └── tsconfig.json
├── test-env.sh
├── tests
│   ├── 22-11 8-14 zeritgreist
│   ├── bigProblemPrompt.md
│   ├── e2e
│   ├── integration
│   └── unit

## Technical Architecture

### Infrastructure
```
Backend:
├── NestJS API Service
├── PostgreSQL Database (Multi-tenant)
├── Redis (Caching/Real-time)
└── WebSocket Service

Frontend:
├── Management Portal (Next.js)
├── Admin Portal (Next.js)
└── Client App (React Native Web)
```

### Core Services
1. Authentication Service
   - JWT-based authentication
   - Parallel admin/user tokens
   - Role-based access control

2. Multi-tenancy Service
   - Schema-based separation
   - Tenant configuration management
   - Resource isolation

3. Communication Service
   - Real-time chat
   - Ticket system
   - Email notifications

4. Payment Service
   - Cryptocurrency integration
   - Credit card processing
   - Banking integration

## Development Process

### Phase 1: Foundation
- Repository setup (Turborepo)
- CI/CD pipeline
- Core service architecture
- Database design
- Authentication system

### Phase 2: Management Portal
- Tenant management
- License management
- Analytics dashboard
- White-label configuration

### Phase 3: Admin Portal
- User management
- Role system
- Site creation wizard
- Settings management

### Phase 4: Client Application
- Cross-platform setup
- Authentication flows
- User profiles
- Communication features

Multi-tenant Platform Project Status
Current Status
Infrastructure

✅ Docker containers successfully running
✅ Postgres database operational
✅ Docker networking properly configured
✅ Docker volumes mounted correctly

Services Health

✅ API Service (Port 3000)

Health endpoint responding
Build process verified
Turbo pipeline integrated
NestJS configuration validated


✅ WebSocket Service (Port 3001)

Health endpoint responding
Build process verified
Turbo pipeline integrated
NestJS configuration validated



Build System

✅ Turbo pipeline configured
✅ Workspace structure verified
✅ Build dependencies resolved
✅ Dev scripts aligned across services

Key Fixes Implemented

Aligned service commands in docker-compose.yml to use Turbo:

Changed from workspace commands to Turbo commands
API: npm run dev:api
WebSocket: npm run dev:websocket


Verified proper build artifacts location and process
Resolved dual process issue in API service
Aligned development environment configurations

Next Steps
1. Authentication Implementation

 Set up JWT strategy
 Implement user authentication endpoints
 Configure auth guards
 Test auth flow across services

2. Database Schema Development

 Define tenant isolation strategy
 Create initial migration scripts
 Set up entity relationships
 Implement database seeding

3. Service Integration

 Define inter-service communication protocols
 Set up WebSocket event handlers
 Implement API endpoints for WebSocket interactions
 Test cross-service data flow

4. Frontend Integration

 Connect admin portal to API
 Set up WebSocket listeners in client app
 Implement auth flow in frontend apps
 Test end-to-end communication

5. Testing Strategy

 Set up E2E testing framework
 Create integration tests for services
 Implement unit tests for core functionality
 Set up CI/CD pipeline

Current Architecture
CopyMulti-tenant Platform
├── Services
│   ├── API (NestJS) - Port 3000
│   └── WebSocket (NestJS) - Port 3001
├── Apps
│   ├── Admin Portal
│   ├── Client App
│   └── Management Portal
└── Shared Packages
    ├── Config
    ├── Core
    └── UI
Development Guidelines

All service changes must be tested with health checks
Use Turbo commands for development: npm run dev:api and npm run dev:websocket
Monitor build artifacts in /dist directories
Keep services aligned in terms of:

Build configuration
Development scripts
Docker configuration



Known Working Configurations
Docker Compose Service Configuration
yamlCopyapi:
  command: npm run dev:api
  volumes:
    - .:/app
    - /app/node_modules

websocket:
  command: npm run dev:websocket
  volumes:
    - .:/app
    - /app/node_modules
Health Check Verification
bashCopycurl http://localhost:3000/health  # API
curl http://localhost:3001/health 

Current docker/init/01-init.sql


=== 01-init.sql ===
-- docker/init/01-init.sql
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Create function for updating timestamps
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Create tenant management functions
CREATE OR REPLACE FUNCTION create_tenant_schema(tenant_id UUID)
RETURNS VOID AS $$
DECLARE
    schema_name TEXT;
BEGIN
    -- Replace hyphens with underscores in the UUID
    schema_name := 'tenant_' || replace(tenant_id::text, '-', '_');
    EXECUTE format('CREATE SCHEMA IF NOT EXISTS %I', schema_name);
END;
$$ LANGUAGE plpgsql;

-- Base tables in public schema
CREATE TABLE tenants (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(255) NOT NULL,
    domain VARCHAR(255) UNIQUE NOT NULL,
    is_active BOOLEAN DEFAULT true,
    settings JSONB NOT NULL DEFAULT '{}',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Create updated_at trigger for tenants
CREATE TRIGGER update_tenant_updated_at
    BEFORE UPDATE ON tenants
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Template for tenant schemas
CREATE OR REPLACE FUNCTION create_tenant_tables(schema_name TEXT)
RETURNS VOID AS $$
BEGIN
    EXECUTE format('
        CREATE TABLE %I.users (
            id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
            email VARCHAR(255) NOT NULL,
            password_hash VARCHAR(255) NOT NULL,
            first_name VARCHAR(255),
            last_name VARCHAR(255),
            role VARCHAR(50) NOT NULL,
            is_active BOOLEAN DEFAULT true,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
            last_login_at TIMESTAMP WITH TIME ZONE,
            UNIQUE(email)
        )', schema_name);

    -- Add trigger for users updated_at
    EXECUTE format('
        CREATE TRIGGER update_user_updated_at
            BEFORE UPDATE ON %I.users
            FOR EACH ROW
            EXECUTE FUNCTION update_updated_at_column();
    ', schema_name);
END;
$$ LANGUAGE plpgsql;

-- Create trigger for automatic schema creation
CREATE OR REPLACE FUNCTION create_tenant_schema_trigger()
RETURNS TRIGGER AS $$
DECLARE
    schema_name TEXT;
BEGIN
    PERFORM create_tenant_schema(NEW.id);
    schema_name := 'tenant_' || replace(NEW.id::text, '-', '_');
    PERFORM create_tenant_tables(schema_name);
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER create_tenant_schema_on_insert
    AFTER INSERT ON tenants
    FOR EACH ROW
    EXECUTE FUNCTION create_tenant_schema_trigger();

-- Create initial admin tenant
INSERT INTO tenants (name, domain, settings)
VALUES ('admin', 'admin.localhost', '{"type": "system"}');

//packages/core/src/database/schema.sql

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Tenant table
CREATE TABLE tenants (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  name VARCHAR(255) NOT NULL,
  domain VARCHAR(255) UNIQUE NOT NULL,
  is_active BOOLEAN DEFAULT true,
  settings JSONB NOT NULL DEFAULT '{}',
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- User table
CREATE TABLE users (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  tenant_id UUID NOT NULL REFERENCES tenants(id) ON DELETE CASCADE,
  email VARCHAR(255) NOT NULL,
  password_hash VARCHAR(255) NOT NULL,
  first_name VARCHAR(255),
  last_name VARCHAR(255),
  role VARCHAR(50) NOT NULL,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  last_login_at TIMESTAMP WITH TIME ZONE,
  UNIQUE(tenant_id, email)
);

-- Session table
CREATE TABLE sessions (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  token VARCHAR(255) NOT NULL,
  expires_at TIMESTAMP WITH TIME ZONE NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Add indexes
CREATE INDEX idx_tenants_domain ON tenants(domain);
CREATE INDEX idx_users_tenant_email ON users(tenant_id, email);
CREATE INDEX idx_users_tenant_role ON users(tenant_id, role);
CREATE INDEX idx_sessions_user ON sessions(user_id);
CREATE INDEX idx_sessions_token ON sessions(token);

